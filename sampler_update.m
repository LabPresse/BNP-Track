function [sample, params] = sampler_update(sample, params)

    %% update counter
    sample.i = sample.i + 1;
    %{
    sample.T = 1 + (sample.T - 1) * (1 - params.T_pace);
    if sample.T - 1 < 1e-5
        sample.T = 1;
    end
    %}
    if sample.T > 1
        sample.T = 1 + (params.T_init - 1) / (1-params.T_end)^2 * (sample.i - params.T_end)^2;
    else
        sample.T = 1;
    end  

    %% collect emitters
    cm = ~sample.bm; % inactive
    active_num = nnz(sample.bm);

    %% nan just in case
    sample.Xm(:, cm) = nan;
    sample.Ym(:, cm) = nan;
    sample.Zm(:, cm) = nan;
    sample.G = nan;

    %% update emission rates
    [ ...
        sample.F, ...
            sample.h, ...
            sample.G, ...
            sample.rec_Fh, ...
            params ...
        ] = sampler_update_bknd_and_gain( ...
        sample.F, ...
        sample.h, ...
        sample.bm, ...
        sample.Xm(:, sample.bm), ...
        sample.Ym(:, sample.bm), ...
        sample.Zm(:, sample.bm), ...
        sample.rec_Fh, ...
        sample.T, ...
        params ...
    );

    if active_num > 0

        for rep = 1:30
            [ ...
                    sample.Xm(:, sample.bm), ...
                    sample.Ym(:, sample.bm), ...
                    sample.Zm(:, sample.bm), ...
                    sample.D, ...
                    sample.rec_XYZ ...
                ] = sampler_update_locs_bm( ...
                active_num, ...
                sample.Xm(:, sample.bm), ...
                sample.Ym(:, sample.bm), ...
                sample.Zm(:, sample.bm), ...
                sample.F, ...
                sample.h, ...
                sample.G, ...
                sample.rec_XYZ, ...
                sample.T, ...
                params ...
            );
        end

    else
        sample.D = params.D_prior_phi ...
            * params.D_prior_chi ...
            / randg(params.D_prior_phi);
    end

    if active_num > 1
        [ ...
                sample.Xm(:, sample.bm), ...
                sample.Ym(:, sample.bm), ...
                sample.Zm(:, sample.bm) ...
            ] = sampler_update_flipswap( ...
            active_num, ...
            sample.Xm(:, sample.bm), ...
            sample.Ym(:, sample.bm), ...
            sample.Zm(:, sample.bm), ...
            sample.D, ...
            params, ...
            false ...
        );
    end

    [ ...
            sample.Xm(:, cm), ...
            sample.Ym(:, cm), ...
            sample.Zm(:, cm) ...
        ] = sampler_update_locs_cm(nnz(cm), sample.D, params);

    
    [ ...
            sample.h, ...
            sample.bm, ...
            sample.rec_Fh(:, 2) ...
        ] = sampler_update_rates_and_loads( ...
        sample.h, ...
        sample.bm, ...
        sample.F, ...
        sample.Xm, ...
        sample.Ym, ...
        sample.Zm, ...
        sample.G, ...
        sample.rec_Fh(:, 2), ...
        sample.T, ...
        params, ...
        5 ...
    );

end
